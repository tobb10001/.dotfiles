# vim: ft=yaml.ansible
- name: Install packages with `apt`
  become: true
  ansible.builtin.apt:
    name:
      - bat
      - curl
      - direnv
      - git
      - gnupg
      - python3-pip
      - stow
      - tmux
      - tree
    state: present
  when: ansible_distribution == "Ubuntu"

- name: Symlink bat on Ubuntu
  ansible.builtin.file:
    src: /usr/bin/batcat
    dest: ~/.local/bin/bat
    state: link
  when: ansible_distribution == "Ubuntu"

- name: Install tldr on Ubuntu
  become: false
  ansible.builtin.unarchive:
    src: https://github.com/psibi/tldr-hs/releases/download/v0.9.2/tldr-musl-linux-v0.9.2.tar.gz
    dest: ~/.local/bin
    creates: ~/.local/bin/tldr
    remote_src: true
  when: ansible_distribution == "Ubuntu"

- name: Install Neovim AppImage
  ansible.builtin.get_url:
    url: https://github.com/neovim/neovim/releases/download/stable/nvim.appimage
    dest: ~/.local/bin/nvim
    mode: '0755'
    checksum: sha256:028cfaaf551d64cbb2f39d15363ed78edb01e2673579b48cb694e3604207d656

- name: Install Node on Ubuntu
  when: ansible_distribution == "Ubuntu"
  block:
    - name: Download Nodesource GPG key
      become: true
      ansible.builtin.get_url:
        url: https://deb.nodesource.com/gpgkey/nodesource-repo.gpg.key
        dest: /etc/apt/keyrings/nodesource.gpg.key
        mode: '0644'
    - name: Dearmor Nodesource GPG key
      become: true
      ansible.builtin.command: gpg --dearmor -o /etc/apt/keyrings/nodesource.gpg /etc/apt/keyrings/nodesource.gpg.key
      args:
        creates: /etc/apt/keyrings/nodesource.gpg
    - name: Add Nodesource list
      become: true
      ansible.builtin.apt_repository:
        repo: "deb [signed-by=/etc/apt/keyrings/nodesource.gpg] https://deb.nodesource.com/node_20.x nodistro main"
        state: present
    - name: Install nodejs and npm
      become: true
      ansible.builtin.apt:
        name:
          - nodejs
        state: present
        update_cache: true

- name: Install npm packages
  become: true
  community.general.npm:
    name: "{{ item }}"
    global: true
    state: latest
  loop:
    - '@ansible/ansible-language-server'
    - 'pyright'

- name: Install pip packages
  ansible.builtin.pip:
    name: ansible-lint

- name: Install lua language server.
  block:
    - name: Create installation directory.
      ansible.builtin.file:
        path: ~/.local/share/lua-language-server
        state: directory
        mode: '0755'
    - name: Download lua language server
      ansible.builtin.unarchive:
        src: https://github.com/LuaLS/lua-language-server/releases/download/3.7.0/lua-language-server-3.7.0-linux-x64.tar.gz
        dest: ~/.local/share/lua-language-server
        mode: '0755'
        creates: ~/.local/share/lua-language-server/bin/lua-language-server
        remote_src: true
      register: luals_download
      until: luals_download is not failed
      retries: 5
    - name: Create lua language server wrapper script
      ansible.builtin.copy:
        content: |
          #!/bin/bash
          exec "$HOME/.local/share/lua-language-server/bin/lua-language-server" "$@"
        dest: ~/.local/bin/lua-language-server
        mode: '0755'

- name: Install golang
  block:
    - name: Install golang
      ansible.builtin.include_role:
        name: gantsign.golang
      vars:
        golang_version: '1.21.1'
    - name: go binary symlink
      become: true
      ansible.builtin.file:
        src: /opt/go/1.21.1/bin/go
        dest: /usr/bin/go
        state: link

- name: Install glow
  command: go install github.com/charmbracelet/glow@latest
  args:
    creates: ~/go/bin/glow
